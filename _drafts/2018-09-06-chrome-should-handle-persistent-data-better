---
layout: post
title: Chrome's indexeddb is unreliable for persistent data
date: '2018-09-06 23:16:00'
tags:
- chromium
- indexeddb
---

As more computation power and business logic is moving to the edge, web application is acting more like traditional desktop application. More of users data are entrusted to the browser, which accept them into it stores, be it localStorage, webSQL (discontinued), indexeddb. However, with great power comes great responsibility. Chromium's indexeddb does not shoulder this responsibility very well. In fact, the way it handles persistent storage is a far cry from being a database in its true senses. A database means that, you insert your data, and it stay there. That one function that a database needs to get right. 

However, my experience storing large data in indexeddb is very dissmal. At work, we have an application that serves millions of users a day. With Chrome, localStorage is limited by size, and does not support indexing. WebSQL is too structural and is a dead specification. Indexeddb is the only way to go with data. We tried to push the limit of web's storage and treat its as a full-fledge db. All the data go in. 

However, it's insane that under many circumstances, Chrome's indexeddb take the liberty of deleting the data. 

1. When user's disk full 
2. when user's host machine crashes. 

No.2 maybe due to design choice, which favors speed over durability. However, no.1 is just weird, shows a lack of respect for data and broke the contract of a database, which is to store data, not to make decision on users' behalf about what to do with those data. 